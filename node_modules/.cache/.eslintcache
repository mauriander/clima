[{"C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\index.js":"1","C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\App.js":"2","C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\reportWebVitals.js":"3","C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\components\\cardTermo.js":"4","C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\components\\cardTemp.js":"5","C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\components\\cardP.js":"6","C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\components\\CardP.js":"7","C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\components\\CardTemp.js":"8","C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\components\\CardTermo.js":"9","C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\components\\Card.js":"10","C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\components\\Modo.js":"11","C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\components\\CardBox.js":"12","C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\components\\BarChart.js":"13","C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\data.js":"14"},{"size":552,"mtime":1696172456105,"results":"15","hashOfConfig":"16"},{"size":4408,"mtime":1696389166256,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1696172456105,"results":"18","hashOfConfig":"16"},{"size":185,"mtime":1695442559376,"results":"19","hashOfConfig":"16"},{"size":182,"mtime":1695442928479,"results":"20","hashOfConfig":"16"},{"size":173,"mtime":1695442549021,"results":"21","hashOfConfig":"16"},{"size":1614,"mtime":1695451696554,"results":"22","hashOfConfig":"16"},{"size":1569,"mtime":1696387579834,"results":"23","hashOfConfig":"16"},{"size":1813,"mtime":1696647911960,"results":"24","hashOfConfig":"16"},{"size":334,"mtime":1696123504530,"results":"25","hashOfConfig":"16"},{"size":656,"mtime":1696178312064,"results":"26","hashOfConfig":"16"},{"size":4502,"mtime":1696643131725,"results":"27","hashOfConfig":"16"},{"size":386,"mtime":1696112472792,"results":"28","hashOfConfig":"16"},{"size":663,"mtime":1696178301606,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"zygbr6",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"33"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"33"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\index.js",[],[],["78"],"C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\App.js",["79","80","81","82","83","84","85"],[],"import \"./App.css\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CardTemp from \"./components/CardTemp\";\r\nimport CardTermo from \"./components/CardTermo\";\r\nimport imagenClima from \"./Clouds.png\";\r\n\r\n// import  CardP  from './components/CardP';\r\nimport CardBox from \"./components/CardBox\";\r\nimport Modo from \"./components/Modo\";\r\nimport BarChart from \"./components/BarChart\";\r\nimport { UserData } from \"./data\";\r\n\r\nimport { Bar } from \"react-chartjs-2\";\r\nconst Imagen = styled.div`\r\n  width: 15vh;\r\n  height: 15vh;\r\n   display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left:32px;\r\n  \r\n`;\r\n\r\nconst AppTotal = styled.div`\r\n  display: flex;\r\n    margin: 0;\r\n    padding: 0;\r\n    height: 100vh; /* Hacemos que la página ocupe toda la altura visible del viewport */\r\n   \r\n\r\n  background-color: ${(props) => (props.isDarkMode ? \"#154360\" : \"#FCF3CF\")};\r\n  color: ${(props) => (props.isDarkMode ? \"#FCF3CF\" : \"#154360\")};\r\n  @media (max-width: 480px) {\r\n    flex: 1; /* Ocupa el 100% del ancho en pantallas pequeñas */\r\n    max-width: 100%;\r\n    height:auto;    \r\n      flex-direction: column;\r\n  flex-wrap: wrap;\r\n  }\r\n`;\r\n\r\nconst LeftColumn = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n  padding: 16px;\r\n  box-sizing: border-box;\r\n  display: grid;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n\r\n  @media (max-width: 480px) {\r\n    flex: 1; /* Ocupa el 100% del ancho en pantallas pequeñas */\r\n    max-width: 100%;\r\n  }\r\n`;\r\n\r\nconst RightColumn = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n  padding: 16px;\r\n  box-sizing: border-box;\r\n  display: grid;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n\r\n  @media (max-width: 480px) {\r\n    flex: 1; /* Ocupa el 100% del ancho en pantallas pequeñas */\r\n    max-width: 100%;\r\n  }\r\n`;\r\n\r\nconst Barrdiv = styled.div`\r\n   display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: row;  \r\n  width: 100%;\r\n  max-height:250px;\r\n \r\n  @media (max-width: 480px) {\r\n    font-size: 14px; /* Cambia el tamaño de fuente para dispositivos móviles */\r\n    margin: 2px; \r\n    flex: 1; /* Ocupa el 100% del ancho en pantallas pequeñas */\r\n    width: 100%;        \r\n  \r\n  }\r\n`;\r\nconst ToggleButton = styled.button`\r\n  background-color: ${(props) => (props.isDarkMode ? \"#154360\" : \"#FCF3CF\")};\r\n  color: ${(props) => (props.isDarkMode ? \"#FCF3CF\" : \"#154360\")}; \r\n  border: none;\r\n  cursor: pointer;\r\n  width: 136px;\r\n position: fixed;\r\n  top: 16px;\r\n  left: 56px;\r\n  transform: translateX(-50%);\r\n  z-index: 2;  \r\n`;\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n  };\r\n\r\n  const imagen = \"Snow\"; // Snow.png haze.png cloud.png\r\n  const direccion = \"./img/\" + imagen + \".png\";\r\n  const [imgclima, setImgClima] = useState(direccion);\r\n  const labels = []; // Reemplaza con tus etiquetas reales\r\n  const data = [];\r\n  const [userData, setUserData] = useState({\r\n    options: {\r\n      maintainAspectRatio: false,\r\n      scales: {\r\n        y: {\r\n          stacked: true,\r\n          grid: {\r\n            display: true,\r\n            color: \"rgba(255,99,132,0.2)\",\r\n          },\r\n        },\r\n        x: {\r\n          grid: {\r\n            display: false,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    labels: UserData.map((data) => data.hora),\r\n    datasets: [\r\n      {\r\n        label: \"Temperatura/hora\",\r\n        data: UserData.map((data) => data.temperatura),\r\n        borderRadius: 16,\r\n        color: \"white\",\r\n        backgroundColor: \"rgba(255,255,132,0.2)\",\r\n        borderColor: \"rgba(255,99,132,1)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,255,132,0.4)\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <AppTotal isDarkMode={isDarkMode}>\r\n      <LeftColumn>\r\n        <ToggleButton onClick={toggleDarkMode} isDarkMode={isDarkMode}>\r\n          {isDarkMode ? \"Modo Claro\" : \"Modo Oscuro\"}\r\n        </ToggleButton>\r\n        <CardTermo />\r\n\r\n        <Imagen>\r\n          <img src={imagenClima} alt=\"Clima\" style={{ width: \"15vh\" }} />\r\n        </Imagen>\r\n\r\n        <CardTemp />\r\n      </LeftColumn>\r\n\r\n      <RightColumn>\r\n        <Barrdiv>\r\n          <BarChart chartData={userData} options={userData.options} />\r\n        </Barrdiv>\r\n\r\n        <CardBox isDarkMode={isDarkMode} />\r\n      </RightColumn>\r\n    </AppTotal>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\reportWebVitals.js",[],[],"C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\components\\cardTermo.js",[],[],"C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\components\\cardTemp.js",[],[],"C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\components\\cardP.js",[],[],"C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\components\\CardP.js",[],[],"C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\components\\CardTemp.js",["86","87"],[],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { UserData } from \"../data\";\r\n\r\nconst TotalTemp = styled.div`\r\n  width: 300px;\r\n  height: auto;\r\n\r\n  margin: 32px;\r\n  display: flex;\r\n  ${\r\n    \"\" /* background-image: linear-gradient(-220deg, #f83600 0%, #f9d423 100%);  */\r\n  }\r\n`;\r\n\r\nconst LeftColumn = styled.div`\r\n  flex: 0 0 50%;\r\n  padding: 16px;\r\n  border-radius: 16px 0 0 56px;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  background-image: linear-gradient(90deg, #f83600 0%, #f9d423 100%);\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Numero = styled.h1`\r\n  height: 56px;\r\n  font-weight: bold;\r\n  color: rgba(22, 22, 22, 0.92);\r\n`;\r\n\r\nconst RightColumn = styled.div`\r\n  flex: 0 0 50%;\r\n  padding: 16px;\r\n  text-align: center;\r\n  box-sizing: border-box;\r\n  border-radius: 0 56px 16px 0;\r\n\r\n  background-image: linear-gradient(90deg, #f9d423 0%, #30cad7 100%);\r\n  font-weight: bold;\r\n`;\r\n\r\nfunction CardTemp() {\r\n  //Maximo\r\n  const maxTemperatura = Math.max(...UserData.map((data) => data.temperatura));\r\n  const [maximo, setMaximo] = useState(maxTemperatura);\r\n  //Minimo\r\n  const minTemperatura = Math.min(...UserData.map((data) => data.temperatura));\r\n  const [minimo, setMinimo] = useState(minTemperatura);\r\n\r\n  return (\r\n    <TotalTemp>\r\n      <LeftColumn>\r\n        Máxima\r\n        <br />\r\n        <Numero> {maximo}º</Numero>\r\n      </LeftColumn>\r\n      <RightColumn>\r\n        Mínima\r\n        <br />\r\n        <Numero>{minimo}º</Numero>\r\n      </RightColumn>\r\n    </TotalTemp>\r\n  );\r\n}\r\n\r\nexport default CardTemp;\r\n","C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\components\\CardTermo.js",["88","89","90","91"],[],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { UserData } from \"../data\";\r\nimport ReactSpeedometer from \"react-d3-speedometer\";\r\nimport Gauge from \"react-canvas-gauge\";\r\n// import SpeedoButton from \"../speedo-button\";\r\n// export const ForceRenderTheComponent = () => <SpeedoButton />;\r\n\r\n\r\n\r\nconst Termo2 = styled.div`\r\n  width: 35vh;\r\n  height: 35vh;\r\n`;\r\n\r\nconst Termo = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  padding:16px;\r\n  margin:16px;\r\n  justify-content:center;\r\n  box-shadow: 0 2px 30px rgba(0, 0, 0, 0.2);\r\n  font-size: 24px;\r\n\r\n  text-align: center;\r\n  background: transparent;\r\n`;\r\n\r\n\r\n\r\n\r\nconst Temperatura = styled.div`\r\n  position: absolute;\r\n  text-align: center;\r\n  \r\n`;\r\n\r\nconst Imagen = styled.div`\r\n  width: 116px;\r\n  height: 116px;\r\n  position: absolute;\r\n`;\r\n\r\nconst Ciudad = styled.div`\r\ndisplay:flex;\r\nalign-items:flex-end;\r\n font-weight: bold;\r\n  \r\n`;\r\n\r\nfunction CardTermo() {\r\n  const promedioTemperatura =\r\n    UserData.reduce((total, data) => total + data.temperatura, 0) /\r\n    UserData.length;\r\n  const [promedio, setPromedio] = useState(promedioTemperatura.toFixed(0));\r\n\r\n  return (\r\n \r\n    <Termo>\r\n     <Gauge\r\n\r\n  mode=\"gauge\"\r\n  size={200}\r\n  enableAnimation={true}\r\n  // animationTimeout={250}\r\n  title=\"Temp.\"\r\n  unit={decodeURI('%C2%B0C')}\r\n  minValue={-15}  \r\n  value={promedio}\r\nscaleList={[\r\n  { scale: 5, quantity: 4, startColor: '#2e86c1', endColor: '#7dcea0' }, // Azul a Verde\r\n  { scale: 5, quantity: 4, startColor: '#7dcea0', endColor: '#f7dc6f' }, // Verde a Amarillo\r\n  { scale: 5, quantity: 4, startColor: '#f7dc6f', endColor: '#ff4e50' }  // Amarillo a Rojo\r\n]}\r\n/>\r\n<Ciudad>Cordoba</Ciudad>\r\n <Temperatura>{promedio}ºC</Temperatura><br></br>\r\n      \r\n\r\n    </Termo>\r\n  );\r\n}\r\n\r\nexport default CardTermo;\r\n","C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\components\\Card.js",["92"],[],"C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\components\\Modo.js",[],[],"C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\components\\CardBox.js",["93","94","95","96","97","98","99","100","101"],[],"import React, { useState } from \"react\";\r\n// import  Card  from './Card';\r\nimport styled from \"styled-components\";\r\nimport { UserData } from \"../data\";\r\nimport BarChart from \"./BarChart\";\r\nimport { Progress } from \"rsuite\";\r\nimport \"rsuite/dist/rsuite.min.css\";\r\nimport sunrise from \"../img/sunrise.png\";\r\nimport sunset from \"../img/sunset.png\";\r\n\r\nconst CardBoxDiv = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 2fr);\r\n  align-items: center;\r\n  background: transparent;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  @media (max-width: 480px) {\r\n    grid-template-columns: repeat(2, 3fr);\r\n    \r\n\r\n  }\r\n`;\r\nconst Card = styled.div`\r\n  width: 20vh;\r\n height:25vh;\r\n  border-radius: 5%;\r\n \r\n  z-index: 1;\r\n  top: 1em;\r\n  border: 1px solid rgba(255, 255, 255, 0.25);\r\n  background: rgba(255, 255, 255, 0.5);\r\n  backdrop-filter: blur(160px);\r\n  @media (max-width: 480px) {\r\n    \r\n margin: 6px;\r\n  }\r\n\r\n`;\r\nconst Barradiv = styled.div`\r\n  place-items: center;\r\n  width: 160px;\r\n  height: 90px;\r\n  border-radius: 5%; \r\n  border-radius:16px;\r\n`;\r\nconst Numero = styled.h3`\r\n  font-weight: bold;\r\n  color: purple;\r\n  font-size: 16px;\r\n`;\r\nconst Unidad = styled.h6`\r\n  text-align: center;\r\n   font-size: 10px;\r\n  color: light-purple;\r\n`;\r\nconst Columna = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: row;\r\n`;\r\nconst Parrafo = styled.p`\r\n  font-size: 10px;\r\n`;\r\nconst Titulo = styled.h3`\r\n  \r\n  font-size: 16px;\r\n  text-align:center;\r\n`;\r\nfunction CardBox() {\r\n  //h humedad\r\n  const [userhData, setUserhData] = useState(12);\r\n  //wv wind velocity\r\n  const [userwvData, setUserwvData] = useState(11.12);\r\n  //aq air quality\r\n  const [useraqData, setUseraqData] = useState([105, \"Unhealtly\"]);\r\n\r\n  //calcular porcentaje para hacer la grafica suponiendo que 300 es lo peor entonces lo divido directamente ene la tabla por osea valor *100/300 seria  1/3\r\n\r\n  //v visibility\r\n  const [uservData, setUservData] = useState(6.1);\r\n  //uv indice uv\r\n  const [useruvData, setUseruvData] = useState(6);\r\n\r\n  const [usersData, setUsersData] = useState(\"6:25\");\r\n\r\n  //VISIBILITY EN KM;\r\n  //VIENTO KM/H\r\n  //AIRQUALITY 0-120\r\n  //HUMEDAD DE 0 A 100\r\n  //INDICE UV DE 0 A 15\r\n\r\n  return (\r\n    <CardBoxDiv>\r\n      <Card>\r\n        <Titulo>Indice UV</Titulo>\r\n        <Columna>\r\n          <Numero>{useruvData} </Numero>\r\n        </Columna>\r\n        <Progress.Line\r\n          percent={(useruvData * 100) / 15}\r\n          strokeColor={\"#f9d423\"}\r\n          vertical={false}\r\n          showInfo={false}\r\n          strokeWidth={16}\r\n        \r\n          \r\n        />\r\n      </Card>\r\n      <Card>\r\n        <Titulo>Puesta del sol</Titulo>\r\n        <Columna>\r\n          <Numero>{usersData} </Numero>\r\n          <Unidad>AM</Unidad>\r\n         <img src={sunrise} alt=\"Clima\" style={{ width: \"7vh\" }} />\r\n        </Columna>\r\n        <Columna>\r\n          <Numero>{usersData} </Numero>\r\n          <Unidad>PM</Unidad>\r\n          <img src={sunset} alt=\"Clima\" style={{ width: \"7vh\" }} />\r\n        </Columna>\r\n      </Card>\r\n\r\n      <Card>\r\n        <Titulo>VIisibilidad</Titulo>\r\n        <Columna>\r\n          <Numero>{uservData} </Numero>\r\n          <Unidad>km</Unidad>\r\n        </Columna>\r\n      </Card>\r\n      <Card>\r\n        <Titulo>Humedad</Titulo>\r\n        <Columna>\r\n          <Numero>{userhData} </Numero>\r\n          <Unidad>%</Unidad>\r\n          <Progress.Line\r\n            percent={userhData}\r\n            strokeColor={\" #f9d423\"}\r\n            vertical={true}\r\n            showInfo={false}\r\n            strokeWidth={20}\r\n             style={{padding:\"0px\", maxHeight: \"18vh\" }} \r\n          />\r\n        </Columna>\r\n      </Card>\r\n      <Card>\r\n        <Titulo>Viento</Titulo>\r\n        <Columna>\r\n          <Numero>{userwvData} </Numero>\r\n          <Unidad>km/h</Unidad>\r\n        </Columna>\r\n        <Parrafo> Se esperan vientos fuertes</Parrafo>\r\n      </Card>\r\n      <Card>\r\n        <Titulo>Calidad de aire</Titulo>\r\n        <Columna>\r\n          <Numero>{useraqData[0]} </Numero>\r\n          <Progress.Line\r\n            percent={(useraqData[0]) / 3}\r\n            strokeColor={\" #f9d423\"}\r\n            vertical={true}\r\n            showInfo={false}\r\n            strokeWidth={16}\r\n             style={{ padding:\"0px\", maxHeight: \"15vh\" }} \r\n          />\r\n        </Columna>\r\n        <Parrafo> {useraqData[1]}</Parrafo>\r\n      </Card>\r\n    </CardBoxDiv>\r\n  );\r\n}\r\n\r\nexport default CardBox;\r\n","C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\components\\BarChart.js",["102","103"],[],"import React, { Component } from 'react';\r\n\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {Chart as ChartJS} from 'chart.js/auto';\r\n\r\n\r\nfunction BarChart({ chartData}){\r\nreturn <Bar data = { chartData}/>\r\n\r\n}\r\n\r\nexport default BarChart;\r\n\r\n\r\n\r\n// export default class BarChart extends Component {\r\n//   render() {\r\n//     return (\r\n//       <div>BarChart</div>\r\n//     )\r\n//   }\r\n// }\r\n","C:\\Users\\MAURICIO\\Desktop\\FAMAF-3 Parte\\clima\\src\\data.js",[],[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":10,"column":8,"nodeType":"108","messageId":"109","endLine":10,"endColumn":12},{"ruleId":"106","severity":1,"message":"110","line":14,"column":10,"nodeType":"108","messageId":"109","endLine":14,"endColumn":13},{"ruleId":"106","severity":1,"message":"111","line":113,"column":10,"nodeType":"108","messageId":"109","endLine":113,"endColumn":18},{"ruleId":"106","severity":1,"message":"112","line":113,"column":20,"nodeType":"108","messageId":"109","endLine":113,"endColumn":31},{"ruleId":"106","severity":1,"message":"113","line":114,"column":9,"nodeType":"108","messageId":"109","endLine":114,"endColumn":15},{"ruleId":"106","severity":1,"message":"114","line":115,"column":9,"nodeType":"108","messageId":"109","endLine":115,"endColumn":13},{"ruleId":"106","severity":1,"message":"115","line":116,"column":20,"nodeType":"108","messageId":"109","endLine":116,"endColumn":31},{"ruleId":"106","severity":1,"message":"116","line":46,"column":18,"nodeType":"108","messageId":"109","endLine":46,"endColumn":27},{"ruleId":"106","severity":1,"message":"117","line":49,"column":18,"nodeType":"108","messageId":"109","endLine":49,"endColumn":27},{"ruleId":"106","severity":1,"message":"118","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":24},{"ruleId":"106","severity":1,"message":"119","line":11,"column":7,"nodeType":"108","messageId":"109","endLine":11,"endColumn":13},{"ruleId":"106","severity":1,"message":"120","line":38,"column":7,"nodeType":"108","messageId":"109","endLine":38,"endColumn":13},{"ruleId":"106","severity":1,"message":"121","line":55,"column":20,"nodeType":"108","messageId":"109","endLine":55,"endColumn":31},{"ruleId":"106","severity":1,"message":"122","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"123","line":4,"column":10,"nodeType":"108","messageId":"109","endLine":4,"endColumn":18},{"ruleId":"106","severity":1,"message":"124","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":16},{"ruleId":"106","severity":1,"message":"125","line":42,"column":7,"nodeType":"108","messageId":"109","endLine":42,"endColumn":15},{"ruleId":"106","severity":1,"message":"126","line":75,"column":21,"nodeType":"108","messageId":"109","endLine":75,"endColumn":33},{"ruleId":"106","severity":1,"message":"127","line":77,"column":22,"nodeType":"108","messageId":"109","endLine":77,"endColumn":35},{"ruleId":"106","severity":1,"message":"128","line":79,"column":22,"nodeType":"108","messageId":"109","endLine":79,"endColumn":35},{"ruleId":"106","severity":1,"message":"129","line":84,"column":21,"nodeType":"108","messageId":"109","endLine":84,"endColumn":33},{"ruleId":"106","severity":1,"message":"130","line":86,"column":22,"nodeType":"108","messageId":"109","endLine":86,"endColumn":35},{"ruleId":"106","severity":1,"message":"131","line":88,"column":21,"nodeType":"108","messageId":"109","endLine":88,"endColumn":33},{"ruleId":"106","severity":1,"message":"122","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":26},{"ruleId":"106","severity":1,"message":"132","line":4,"column":18,"nodeType":"108","messageId":"109","endLine":4,"endColumn":25},"no-new-object",["133"],"no-unused-vars","'Modo' is defined but never used.","Identifier","unusedVar","'Bar' is defined but never used.","'imgclima' is assigned a value but never used.","'setImgClima' is assigned a value but never used.","'labels' is assigned a value but never used.","'data' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'setMaximo' is assigned a value but never used.","'setMinimo' is assigned a value but never used.","'ReactSpeedometer' is defined but never used.","'Termo2' is assigned a value but never used.","'Imagen' is assigned a value but never used.","'setPromedio' is assigned a value but never used.","'Component' is defined but never used.","'UserData' is defined but never used.","'BarChart' is defined but never used.","'Barradiv' is assigned a value but never used.","'setUserhData' is assigned a value but never used.","'setUserwvData' is assigned a value but never used.","'setUseraqData' is assigned a value but never used.","'setUservData' is assigned a value but never used.","'setUseruvData' is assigned a value but never used.","'setUsersData' is assigned a value but never used.","'ChartJS' is defined but never used.","no-object-constructor"]