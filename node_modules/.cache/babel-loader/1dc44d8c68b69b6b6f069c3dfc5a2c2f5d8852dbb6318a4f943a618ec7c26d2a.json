{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAURICIO\\\\Desktop\\\\FAMAF-3 Parte\\\\clima\\\\src\\\\components\\\\Modo.js\",\n  _s = $RefreshSig$();\nimport React, { Componet } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleButton = styled.button`\n  background-color: ${props => props.isDarkMode ? '#333' : '#eee'};\n  color: ${props => props.isDarkMode ? '#eee' : '#333'};\n  padding: 8px 16px;\n  border: none;\n  cursor: pointer;\n`;\n_c = ToggleButton;\nconst Modo = () => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n    // Aquí puedes aplicar lógica adicional para cambiar el tema de tu aplicación\n  };\n\n  return /*#__PURE__*/_jsxDEV(ToggleButton, {\n    onClick: toggleDarkMode,\n    isDarkMode: isDarkMode,\n    children: isDarkMode ? 'Modo Claro' : 'Modo Oscuro'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Modo, \"vYJNNV25FHwH0TTZOrX//UDd4kA=\");\n_c2 = Modo;\nexport default Modo;\nvar _c, _c2;\n$RefreshReg$(_c, \"ToggleButton\");\n$RefreshReg$(_c2, \"Modo\");","map":{"version":3,"names":["React","Componet","styled","jsxDEV","_jsxDEV","ToggleButton","button","props","isDarkMode","_c","Modo","_s","setIsDarkMode","useState","toggleDarkMode","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/MAURICIO/Desktop/FAMAF-3 Parte/clima/src/components/Modo.js"],"sourcesContent":["import React, {Componet} from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst ToggleButton = styled.button`\r\n  background-color: ${(props) => (props.isDarkMode ? '#333' : '#eee')};\r\n  color: ${(props) => (props.isDarkMode ? '#eee' : '#333')};\r\n  padding: 8px 16px;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\nconst Modo = () => {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n    // Aquí puedes aplicar lógica adicional para cambiar el tema de tu aplicación\r\n  };\r\n\r\n return (\r\n    <ToggleButton onClick={toggleDarkMode} isDarkMode={isDarkMode}>\r\n      {isDarkMode ? 'Modo Claro' : 'Modo Oscuro'}\r\n    </ToggleButton>\r\n  );\r\n}\r\n\r\nexport default Modo"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,YAAY,GAAGH,MAAM,CAACI,MAAO;AACnC,sBAAuBC,KAAK,IAAMA,KAAK,CAACC,UAAU,GAAG,MAAM,GAAG,MAAQ;AACtE,WAAYD,KAAK,IAAMA,KAAK,CAACC,UAAU,GAAG,MAAM,GAAG,MAAQ;AAC3D;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIJ,YAAY;AAOlB,MAAMK,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACH,UAAU,EAAEI,aAAa,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BF,aAAa,CAAC,CAACJ,UAAU,CAAC;IAC1B;EACF,CAAC;;EAEF,oBACGJ,OAAA,CAACC,YAAY;IAACU,OAAO,EAAED,cAAe;IAACN,UAAU,EAAEA,UAAW;IAAAQ,QAAA,EAC3DR,UAAU,GAAG,YAAY,GAAG;EAAa;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEnB,CAAC;AAAAT,EAAA,CAbKD,IAAI;AAAAW,GAAA,GAAJX,IAAI;AAeV,eAAeA,IAAI;AAAA,IAAAD,EAAA,EAAAY,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}