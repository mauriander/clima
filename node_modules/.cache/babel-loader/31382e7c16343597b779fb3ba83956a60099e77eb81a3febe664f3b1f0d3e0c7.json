{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAURICIO\\\\Desktop\\\\FAMAF-3 Parte\\\\clima\\\\src\\\\components\\\\CardBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from './Card';\nimport styled from 'styled-components';\nimport { UserData } from '../data';\nimport BarChart from './BarChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardBoxDiv = styled.div`  \n  display: grid;\n  grid-template-columns: repeat(3, 2fr); \n   background-:transparent;\n  @media (max-width: 768px) {\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));   }\n\n  @media (max-width: 480px) {\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); \n  }\n`;\n_c = CardBoxDiv;\nconst Barradiv = styled.div`\n color: white; /* Establece el color del texto en blanco */\n\n  max-width: 250px; /* Establece un ancho máximo opcional */\n  margin: 0 auto; /* Centra el gráfico horizontalmente */\n  font-size: 16px; /* Tamaño de fuente predeterminado */\n   background-image: linear-gradient(135deg, #f83600 0%, #f9d423 100%); \n   border-radius:16px;\n\n   @media (max-width: 400px)    {\n    font-size: 14px; /* Cambia el tamaño de fuente para dispositivos móviles */\n  }\n`;\n_c2 = Barradiv;\nfunction CardBox() {\n  _s();\n  const labels = []; // Reemplaza con tus etiquetas reales\n  const data = [];\n  const [userData, setUserData] = useState({\n    labels: UserData.map(data => data.hora),\n    datasets: [{\n      label: \"Temperatura/hora\",\n      data: UserData.map(data => data.temperatura),\n      backgroundColor: 'lightblue'\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(CardBoxDiv, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Barradiv, {\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          chartData: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n_s(CardBox, \"KORuzMnicZqdjyYbFE6tRu9lmik=\");\n_c3 = CardBox;\nexport default CardBox;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CardBoxDiv\");\n$RefreshReg$(_c2, \"Barradiv\");\n$RefreshReg$(_c3, \"CardBox\");","map":{"version":3,"names":["React","useState","Card","styled","UserData","BarChart","jsxDEV","_jsxDEV","CardBoxDiv","div","_c","Barradiv","_c2","CardBox","_s","labels","data","userData","setUserData","map","hora","datasets","label","temperatura","backgroundColor","children","chartData","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["C:/Users/MAURICIO/Desktop/FAMAF-3 Parte/clima/src/components/CardBox.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport  Card  from './Card';\r\nimport styled from 'styled-components';\r\nimport { UserData } from '../data';\r\nimport BarChart from './BarChart';\r\n\r\nconst CardBoxDiv = styled.div`  \r\n  display: grid;\r\n  grid-template-columns: repeat(3, 2fr); \r\n   background-:transparent;\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));   }\r\n\r\n  @media (max-width: 480px) {\r\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); \r\n  }\r\n`;\r\n\r\nconst Barradiv = styled.div`\r\n color: white; /* Establece el color del texto en blanco */\r\n\r\n  max-width: 250px; /* Establece un ancho máximo opcional */\r\n  margin: 0 auto; /* Centra el gráfico horizontalmente */\r\n  font-size: 16px; /* Tamaño de fuente predeterminado */\r\n   background-image: linear-gradient(135deg, #f83600 0%, #f9d423 100%); \r\n   border-radius:16px;\r\n\r\n   @media (max-width: 400px)    {\r\n    font-size: 14px; /* Cambia el tamaño de fuente para dispositivos móviles */\r\n  }\r\n`;\r\nfunction CardBox() {\r\nconst labels = []; // Reemplaza con tus etiquetas reales\r\n  const data = [];\r\n  const [userData, setUserData] = useState({    \r\n      labels: UserData.map((data)=> data.hora),      \r\n      datasets: [\r\n        {\r\n          label: \"Temperatura/hora\",\r\n          data: UserData.map((data)=> data.temperatura),\r\n      backgroundColor: 'lightblue',              \r\n        }\r\n      ]\r\n    \r\n  });\r\n\r\n  \r\n  \r\n    return (\r\n      <CardBoxDiv>\r\n        <Card><Barradiv>\r\n       <BarChart chartData={userData}/></Barradiv>\r\n        </Card>\r\n        <Card></Card>\r\n        <Card></Card>\r\n        <Card></Card>\r\n        <Card></Card>\r\n        <Card></Card>\r\n        \r\n\r\n\r\n      </CardBoxDiv>\r\n        \r\n        \r\n    );\r\n \r\n}\r\n\r\nexport default CardBox;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAQC,IAAI,MAAO,QAAQ;AAC3B,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,QAAQ,SAAS;AAClC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGL,MAAM,CAACM,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAVIF,UAAU;AAYhB,MAAMG,QAAQ,GAAGR,MAAM,CAACM,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAZID,QAAQ;AAad,SAASE,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,MAAM,GAAG,EAAE,CAAC,CAAC;EACjB,MAAMC,IAAI,GAAG,EAAE;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC;IACrCc,MAAM,EAAEX,QAAQ,CAACe,GAAG,CAAEH,IAAI,IAAIA,IAAI,CAACI,IAAI,CAAC;IACxCC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,kBAAkB;MACzBN,IAAI,EAAEZ,QAAQ,CAACe,GAAG,CAAEH,IAAI,IAAIA,IAAI,CAACO,WAAW,CAAC;MACjDC,eAAe,EAAE;IACf,CAAC;EAGP,CAAC,CAAC;EAIA,oBACEjB,OAAA,CAACC,UAAU;IAAAiB,QAAA,gBACTlB,OAAA,CAACL,IAAI;MAAAuB,QAAA,eAAClB,OAAA,CAACI,QAAQ;QAAAc,QAAA,eAChBlB,OAAA,CAACF,QAAQ;UAACqB,SAAS,EAAET;QAAS;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACPvB,OAAA,CAACL,IAAI;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACbvB,OAAA,CAACL,IAAI;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACbvB,OAAA,CAACL,IAAI;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACbvB,OAAA,CAACL,IAAI;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACbvB,OAAA,CAACL,IAAI;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIH,CAAC;AAKnB;AAAChB,EAAA,CAnCQD,OAAO;AAAAkB,GAAA,GAAPlB,OAAO;AAqChB,eAAeA,OAAO;AAAC,IAAAH,EAAA,EAAAE,GAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAApB,GAAA;AAAAoB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}